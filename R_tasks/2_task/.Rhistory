q()
print(teste)
print('teste')
teste = [1,2,2,1,2,1,3,4,54,43]
teste = (1,2,2,1,2,1,3,4,54,43)
teste = (1, 2, 2, 1, 2, 1, 3, 4, 54, 43)
teste = [1, 2, 2, 1, 2, 1, 3, 4, 54, 43]
teste = list([1, 2, 2, 1, 2, 1, 3, 4, 54, 43])
teste = list(1, 2, 2, 1, 2, 1, 3, 4, 54, 43)
teste
teste[1]
teste[0]
teste[2]
teste[2][1]
teste[2][1][2]
teste[2][1][0]
teste[2,2
teste[2,2]
teste[2,2]
teste[1,2]
teste[1,2]clear
clear
cls
:q
q()
library(readr)
install.packages("tidyverse")
install.packages("Rtools")
install.Rtools()
install.Rtools(checkRupdate = F)
install.packages("tidyverse")
library(readr)
install.packages("tidyverse", type = "source")
install.packages("tidyverse", type = "source")
library(readr)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("qqplotr", lib="C:/Users/viniciushc/R/R-4.1.3/library")
knitr::opts_chunk$set(echo = TRUE)
library(qqplotr)
library(qqplotr)
df %>%
qqplot(ast(sample = Altura)) +
facet_wrap(~ Genero) +
stat_qq_band(fill = 'gray') +
stat_qq_line(fill = 'red') +
library(qqplotr)
df %>%
qqplot(ast(samples = Altura)) +
facet_wrap(~ Genero) +
stat_qq_band(fill = 'gray') +
stat_qq_line(fill = 'red') +
stat_qq_point()
library(qqplotr)
df %>%
qqplot(ast(samples = Altura)) +
facet_wrap(~ Genero) +
stat_qq_band(fill = 'gray') +
stat_qq_line(col = 'red') +
stat_qq_point()
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
library(dplyr)
df <- read.csv("C:\\Users\\viniciushc\\Git_Vinicius\\[POS] INTELIGÊNCIA ARTIFICIAL E APRENDIZADO DE MÁQUINA\\LINGUAGEM_R_GP_IA\\Rvisual\\data\\Banco de Dados 1.csv", sep = ';')
glimpse(df)
table(df$Genero)
table(df$Time)
table(df$Genero, df$Time)
table(df$Grau_de_Instrucao, df$Time)
prop.table(table(df$Genero, df$Time)) * 100
prop.table(table(df$Grau_de_Instrucao, df$N_Filhos)) * 100
# De todos os corinthianos quantos são analfabetos
prop.table(table(df$Time, df$Grau_de_Instrucao), margin = 1) * 100
# De todos os anlfabetos quantos são corinthianos
prop.table(table(df$Time, df$Grau_de_Instrucao), margin = 2) * 100
prop.table(table(df$Time, df$N_Filhos), margin = 1) * 100
prop.table(table(df$Time, df$N_Filhos), margin = 2) * 100
r <- c(range(df$Idade))
# Divisão do intervalo de classe
cl <- nclass.Sturges(df$Idade)
cl2 <- nclass.scott(df$Idade)
# Intervalos de individuos
table(cut(df$Idade, seq(r[1], r[2], l = cl)))
table(cut(df$Idade, seq(20, 100, l = 9)))
table(cut(df$Salario_x_Salario_minimo, seq(0, 26, l = 9)))
library(ggplot2)
df %>%
ggplot(aes(Genero, fill = Time)) +
geom_bar() +
facet_wrap(~Time)
df %>%
ggplot(aes(Time)) +
geom_bar() +
facet_wrap(~ Genero)
df %>%
ggplot(aes(Altura)) +
geom_histogram(bins = 10) +
facet_wrap(~ Genero)
df %>%
ggplot(aes(Altura)) +
geom_histogram(aes(y = stat(count)/sum(count)), bins = 10) +
# geom_density() +
facet_wrap(~ Genero) +
scale_y_continuous(labels = scales::percent)
df %>%
ggplot(aes(sample = Altura)) +
facet_wrap(~ Genero) +
stat_qq()
library(qqplotr)
df %>%
qqplot(ast(samples = Altura)) +
facet_wrap(~ Genero) +
stat_qq_band(fill = 'gray') +
stat_qq_line(col = 'red') +
stat_qq_point()
library(qqplotr)
df %>%
qqplot(ast(samples = Altura)) +
facet_wrap(~ Genero) +
stat_qq_band(fill = 'gray') +
stat_qq_line(col = 'red') +
stat_qq_point()
df %>%
qqplot(ast(samples = Altura)) +
facet_wrap(~ Genero)
df %>%
qqplot(ast(samples = Altura)) +
facet_wrap(~ Genero)
df %>%
qqplot(ast(samples = Altura)) +
facet_wrap(~ Genero) +
stat_qq_band(fill = 'gray') +
stat_qq_line(col = 'red') +
stat_qq_point()
library(qqplotr)
library(qqplotr)
df %>%
qqplotr(ast(samples = Altura)) +
facet_wrap(~ Genero) +
stat_qq_band(fill = 'gray') +
stat_qq_line(col = 'red') +
stat_qq_point()
library(qqplotr)
df %>%
qqplot(ast(samples = Altura)) +
facet_wrap(~ Genero) +
stat_qq_band(fill = 'gray') +
stat_qq_line(col = 'red') +
stat_qq_point()
library(qqplotr)
df %>%
qqplot(ast(samples = Altura)) +
facet_wrap(~ Genero) +
stat_qq_band(fill = 'gray') +
stat_qq_line(col = 'red') +
stat_qq_point()
df
library(qqplotr)
df %>%
qqplot(aes(samples = Altura)) +
facet_wrap(~ Genero) +
stat_qq_band(fill = 'gray') +
stat_qq_line(col = 'red') +
stat_qq_point()
library(qqplotr)
df %>%
qqplot(aes(sample = Altura)) +
facet_wrap(~ Genero) +
stat_qq_band(fill = 'gray') +
stat_qq_line(col = 'red') +
stat_qq_point()
library(qqplotr)
df %>%
qqplot(aes(sample = Altura)) +
facet_wrap(~Genero) +
stat_qq_band(fill = 'gray') +
stat_qq_line(col = 'red') +
stat_qq_point()
df %>%
qqplot(aes(sample = Altura)) +
facet_wrap(~ Genero) +
stat_qq_band(fill = 'gray') +
stat_qq_line(col = 'red') +
stat_qq_point()
df %>%
ggplot(aes(sample = Altura)) +
facet_wrap(~ Genero) +
stat_qq_band(fill = 'gray') +
stat_qq_line(col = 'red') +
stat_qq_point()
knitr::opts_chunk$set(echo = TRUE)
plot_hist_stat <- df %>%
ggplot(aes(total_day_minutes)) +
geom_histogram()
plot_hist_stat
plot_hist_stat <- df %>%
ggplot(aes(total_day_minutes)) +
geom_histogram()
plot_hist_stat
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tibble)
library(dplyr)
library(stringr)
library(tidyr)
library(magrittr)
library(plotly)
library(ggplot2)
library(tidyverse)
library(skimr)
df <- read.csv("C:\\Users\\viniciushc\\Git_Vinicius\\[POS] INTELIGÊNCIA ARTIFICIAL E APRENDIZADO DE MÁQUINA\\LINGUAGEM_R_GP_IA\\Rvisual\\data\\telecom_churn.csv")
plot(df)
plot(df$Total.day.calls, df$Total.day.charge, color = as.factor(df$State))
df %<>%
rename_with(~ tolower(gsub('.', '_', .x, fixed = TRUE)))
sum(is.na(df))
df %>%
count(churn)
df %>%
group_by(state, churn) %>%
summarise(
mean_calls_day = mean(total_day_calls),
mean_charge_day = mean(total_day_charge)
)
skimr::skim(df)
df
plot_calls <- df %>%
ggplot(aes(total_day_calls, total_day_charge, colour = as.factor(churn))) +
geom_point() +
# geom_smooth(method = 'lm') +
labs(
title = 'Total of calls and Charge per day',
subtitle = 'By client',
colour = 'Churn',
y = 'Charge',
x = 'Calls'
)
plot_calls
plot_hist <- df %>%
ggplot(aes(state, fill = churn)) +
geom_bar() +
# geom_smooth(method = 'lm') +
labs(
title = 'Total of churn',
subtitle = 'By state',
fill = 'Churn',
y = 'Clients',
x = 'State'
)
plot_hist
plot_fun <- df %>%
ggplot(aes(y=fct_reorder(state, total_day_minutes), color=churn)) +
geom_bar()
plot_fun
plot_lin <- df %>%
ggplot(aes(total_day_minutes, state, colour = churn)) +
geom_line()
plot_lin
plot_histogram <- df %>%
ggplot(aes(x = total_day_calls, y = total_night_calls, color = state)) +
geom_point()
plot_histogram
plot_hist_stat <- df %>%
ggplot(aes(total_day_minutes)) +
geom_histogram()
df
plot_hist_stat <- df %>%
ggplot(aes(total_day_minutes)) +
geom_histogram()
plot_hist_stat
plot_hist_stat <- df %>%
ggplot(aes(total_day_minutes)) +
geom_histogram() +
facet_wrap(~ churn)
plot_hist_stat
plot_hist_stat <- df %>%
ggplot(aes(total_day_minutes, total_day_charge)) +
geom_histogram() +
facet_wrap(~ churn)
plot_hist_stat
plot_hist_stat <- df %>%
ggplot(aes(total_day_charge)) +
geom_histogram() +
facet_wrap(~ churn)
plot_hist_stat
plot_hist_stat <- df %>%
ggplot(aes(total_day_charge)) +
geom_histogram(bind = 10) +
facet_wrap(~ churn)
plot_hist_stat
plot_hist_stat <- df %>%
ggplot(aes(total_day_charge)) +
geom_histogram(bind = 10) +
facet_wrap(~ international_plan)
plot_hist_stat
plot_hist_stat <- df %>%
ggplot(aes(total_day_charge)) +
geom_histogram(aes(y = stat(count)/sum(count)), bins = 10) +
facet_wrap(~ international_plan)
plot_hist_stat
plot_histogram <- df %>%
ggplot(aes(x = total_day_calls, y = total_night_calls, color = state)) +
geom_point()
facet_wrap(~ churn)
plot_histogram
setwd("C:/Users/viniciushc/Git_Vinicius/[POS] INTELIGÊNCIA ARTIFICIAL E APRENDIZADO DE MÁQUINA/LINGUAGEM_R_GP_IA/Rvisual")
