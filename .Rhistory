q()
print(teste)
print('teste')
teste = [1,2,2,1,2,1,3,4,54,43]
teste = (1,2,2,1,2,1,3,4,54,43)
teste = (1, 2, 2, 1, 2, 1, 3, 4, 54, 43)
teste = [1, 2, 2, 1, 2, 1, 3, 4, 54, 43]
teste = list([1, 2, 2, 1, 2, 1, 3, 4, 54, 43])
teste = list(1, 2, 2, 1, 2, 1, 3, 4, 54, 43)
teste
teste[1]
teste[0]
teste[2]
teste[2][1]
teste[2][1][2]
teste[2][1][0]
teste[2,2
teste[2,2]
teste[2,2]
teste[1,2]
teste[1,2]clear
clear
cls
:q
q()
# Importing the dataset
dataset = read.csv('Data.csv')
#
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
# Importing the dataset
dataset = read.csv('Data.csv')
# Importing the dataset
dataset = read.csv('Data.csv')
# Importing the dataset
dataset = read.csv('Data.csv')
setwd("C:/Users/viniciushc/Git_Vinicius/Machine+Learning+A-Z+(Codes+and+Datasets)/Machine Learning A-Z (Codes and Datasets)/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/R")
# Importing the dataset
dataset = read.csv('Data.csv')
dataset
#
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
#
dataset$Age = ifelse(is.na(dataset$Age) %>%
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
#
dataset$Age = ifelse(is.na(dataset$Age) %>%
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)) %>%
dataset$Age)
#
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
# Importing the dataset
dataset = read.csv('Data.csv')
dataset
#
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
library(caTools)
library(caTools)
set.seed(123)
training_set = subset(dataset, split == TRUE)
install.packages("caTools")
set.seed(123)
library(caTools)
set.seed(123)
split = sample.split(dataset$DependentVariable, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
split = sample.split(dataset$DependentVariable, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
training_set = subset(dataset, split == TRUE)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
library(caTools)
set.seed(123)
split = sample.split(dataset$DependentVariable, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
library(caTools)
# Splitting the dataset into the Training set and Test set
install.packages('caTools')
# Splitting the dataset into the Training set and Test set
install.packages('caTools')
library(caTools)
setwd("C:/Users/viniciushc/Git_Vinicius/[POS] INTELIGÊNCIA ARTIFICIAL E APRENDIZADO DE MÁQUINA/LINGUAGEM_R_GP_IA")
library(readr)
library(readr)
View(dataset)
View(dataset)
install.package('tidyverse')
install.packages('tidyverse')
library(readr)
library(readr)
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
# install.packages('tidyverse')
install.packages("tidyverse", dependencies = TRUE, INSTALL_opts = '--no-lock')
# install.packages('tidyverse')
install.packages("tidyverse", dependencies = TRUE, INSTALL_opts = '--no-lock')
library(tidyverse)
library(readr)
# install.packages('tidyverse')
install.packages("tidyverse", dependencies = TRUE, INSTALL_opts = '--no-lock')
library(tidyverse)
library(readr)
# install.packages('tidyverse')
install.packages("tidyverse", dependencies = TRUE, INSTALL_opts = '--no-lock')
install.packages("tidyverse")
# install.packages('tidyverse')
install.packages("tidyverse", dependencies = TRUE, INSTALL_opts = '--no-lock')
# install.packages('tidyverse')
install.packages("tidyverse", dependencies = TRUE, INSTALL_opts = '--no-lock')
# install.packages('tidyverse')
install.packages("tidyverse", dependencies = TRUE, INSTALL_opts = '--no-lock')
# install.packages('tidyverse')
install.packages("tidyverse", dependencies = TRUE, INSTALL_opts = '--no-lock')
library(data.table)
install.packages("tidyverse")
install.packages("dplyr")
library(dplyr)
library(tdyr)
library(tidyr)
